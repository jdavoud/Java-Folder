import java.applet.Applet;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class World extends Applet implements KeyListener, MouseListener{
	String mode = "Beginning"; //Will be used for bag, battle, and normal also 
	Trainer player;
	Button newGame;
	
	public static Type fire, water, grass, electric, ground, rock, dark, fight, normal, flying, psychic, ghost, dragon, ice, bug, poison, steel;
	public void init() {
		setTypes();
		setSize(600,600);
		addKeyListener(this);
		addMouseListener(this);
	}
	public void paint(Graphics g){
		Graphics2D g2 = (Graphics2D) g;
		setBackground(new Color(0,255,255));
		
		if(mode == "Beginning"){
			beginning(g2);
		}
		repaint();
	}
	
//	public static void main(String[] args){
//		setTypes();
//		log(grass.getName() + " Weak attacking: " + grass.getWeakAttacking().length);
//		for(int i = 0; i < grass.getWeakAttacking().length; i++){
//			log("" + grass.getWeakAttacking()[i].getName());
//		}
//
//		/*log(water.getName() + " Strong attacking");
//		for(int i = 0; i < water.getStrongAttacking().length; i++){
//			log("" + water.getStrongAttacking()[i].getName());
//		}*/
//	}
	public void beginning(Graphics2D g2){
		Color startColor = g2.getColor();
		
		
		g2.setBackground(startColor);
	}
	public static void setTypes(){
		fire = new Type("Fire");
		water = new Type("Water");
		grass = new Type("Grass");
		electric = new Type("Electric");
		ground = new Type("Ground");
		rock = new Type("Rock");
		dark = new Type("Dark");
		fight = new Type("Fight");
		normal = new Type("Normal");
		flying = new Type("Flying");
		psychic = new Type("Psychic");
		ghost = new Type("Ghost");
		dragon = new Type("Dragon");
		ice = new Type("Ice");
		bug = new Type("Bug");
		poison = new Type("Poison");
		steel = new Type("Steel");


		addStrong(fire, new Type[] {bug, grass, ice, steel});
		addWeak(fire, new Type[] {fire, water, rock, dragon});

		addStrong(water, new Type[] {fire, ground, rock});
		addWeak(water, new Type[] {water, grass, dragon});

		addWeak(normal, new Type[] {rock, steel});
		addCantAttack(normal, new Type[]{ghost});

		addStrong(electric, new Type[] {water, flying});
		addWeak(electric, new Type[] {electric, grass, dragon});
		addCantAttack(electric, new Type[]{ground});

		addStrong(grass, new Type[] {water, ground, rock});
		addWeak(grass, new Type[] {fire, grass, poison, bug, flying, dragon, steel});

		addStrong(ice, new Type[] {grass, ground, flying, dragon});
		addWeak(ice, new Type[] {fire, water, ice, steel});

		addStrong(fight, new Type[]{normal, ice, rock, dark, steel});
		addWeak(fight, new Type[] {poison, flying, psychic, bug});
		addCantAttack(fight, new Type[] {ghost});

		addStrong(poison, new Type[] {grass});
		addWeak(poison, new Type[] {poison, rock, ground, ghost});

		addStrong(ground, new Type[] {fire, electric, poison, rock, steel});
		addWeak(ground, new Type[] {grass, bug});
		addCantAttack(ground, ghost);

		addStrong(flying, new Type[] {grass, fight, bug});
		addWeak(flying, new Type[] {electric, rock, steel});

		addStrong(psychic, new Type[] {fight, poison});
		addWeak(psychic, new Type[] {psychic, steel});
		addCantAttack(psychic, dark);

		addStrong(bug, new Type[] {grass, psychic, dark});
		addWeak(bug, new Type[] {fire, fight, poison, flying, dark, steel});

		addStrong(rock, new Type[] {fire, ice, flying, bug});
		addWeak(rock, new Type[] {fight, ground, steel});

		addStrong(ghost, new Type[] {psychic, ghost});
		addWeak(ghost, new Type[] {dark, steel});
		addCantAttack(ghost, new Type[] {normal});

		addStrong(dragon, new Type[] {dragon});
		addWeak(dragon, new Type[] {steel});


		addStrong(dark, new Type[] {psychic, ghost});
		addWeak(dark, new Type[] {fight, dark, steel});

		addStrong(steel, new Type[] {ice, rock});
		addWeak(steel, new Type[] {fire, water, electric, steel});


	}
	public static void addStrong(Type type1, Type type2){
		type1.setStrongAttacking(type2);
		type2.setWeakDefending(type1);
	}
	public static void addStrong(Type type1, Type[] types){
		if(types != null){
			for (int i = 0; i < types.length; i++){
				addStrong(type1, types[i]);
			}
		}
	}
	public static void addWeak(Type type1, Type type2){
		type1.setWeakAttacking(type2);
		type2.setStrongDefending(type1);
	}
	public static void addWeak(Type type1, Type[] types){
		if(types != null){
			for (int i = 0; i < types.length; i++){
				addWeak(type1, types[i]);
			}
		}
	}
	public static void addCantAttack(Type type1, Type type2){
		type1.cantAttack(type2);
		type2.cantBeAttackedBy(type1);
	}
	public static void addCantAttack(Type type1, Type[] types){
		if(types != null){
			for (int i = 0; i < types.length; i++){
				addCantAttack(type1, types[i]);
			}
		}
	}
	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void keyPressed(KeyEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub

	}
	public static void log(String s){
		System.out.println(s);
	}
}
